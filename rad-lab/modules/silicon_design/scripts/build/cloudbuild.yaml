#
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, eithern express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

timeout: 3600s
substitutions:
  _ZONE: 'asia-northeast1-a'
  _COMPUTE_IMAGE: 'silicon-design-ubuntu-2004'
  _CONTAINER_IMAGE: 'silicon-design-ubuntu-2004'
  _IMAGE_TAG: 'default-tag'
  _STAGING_BUCKET: 'silicon-design-notebooks'
  _COMPUTE_NETWORK: 'global/networks/default'
  _COMPUTE_SUBNET: ''
  _CLOUD_BUILD_SA: ''
options:
  logging: CLOUD_LOGGING_ONLY
steps:
- id: 'notebooks-build'
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |-
    apt-get update && apt-get install -yq python3.8-venv
    python3 -m venv env/
    env/bin/python -m pip install jupytext
    env/bin/jupytext --to notebook scripts/build/notebooks/**/*.md
    echo "set -ex" > scripts/build/notebooks/copy-notebooks.sh
    echo "mkdir -p /home/jupyter/examples/" >> scripts/build/notebooks/copy-notebooks.sh
    echo "gsutil rsync -r -x '.*\.(sh|json)' gs://$_STAGING_BUCKET/examples/ /home/jupyter/examples/" >> scripts/build/notebooks/copy-notebooks.sh
    gsutil rsync -r -x '.*\.(md|svg)' scripts/build/notebooks/ gs://$_STAGING_BUCKET/
  waitFor: ['-']
- id: 'compute-image-build'
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |-
    cd scripts/build/images/
    gsutil cp gs://compute-image-tools/release/linux/daisy .
    chmod +x daisy
    gcloud compute images describe $_COMPUTE_IMAGE-$_IMAGE_TAG || ./daisy -project $PROJECT_ID -zone $_ZONE -variables image_name=$_COMPUTE_IMAGE,image_tag=$_IMAGE_TAG,network=$_COMPUTE_NETWORK,subnet=$_COMPUTE_SUBNET,service_account=$_CLOUD_BUILD_SA compute_image.wf.json
  waitFor: ['-']
- id: 'container-image-build'
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |-
    cat <<EOF >> ./scripts/build/images/Dockerfile
    ENV RADLAB_SILICON_PROJECT=$PROJECT_ID
    ENV RADLAB_SILICON_LOCATIOn=$_ZONE
    ENV RADLAB_SILICON_CONTAINER=$_CONTAINER_IMAGE:$_IMAGE_TAG
    ENV RADLAB_SILICON_BUCKET=$_STAGING_BUCKET
    EOF
    docker build -t $_CONTAINER_IMAGE:$_IMAGE_TAG ./scripts/build/images
  waitFor: ['-']  
- id: 'container-image-test'
  name: 'gcr.io/cloud-builders/docker'
  args: ['run', '$_CONTAINER_IMAGE:$_IMAGE_TAG', 'flow.tcl', '-design', 'inverter']
  waitFor: ['container-image-build']
- id: 'container-image-tag'
  name: 'gcr.io/cloud-builders/docker'
  args: ['tag', '$_CONTAINER_IMAGE:$_IMAGE_TAG', '$_CONTAINER_IMAGE:latest']
  waitFor: ['container-image-build']
- id: 'container-image-push'
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', '--all-tags', '$_CONTAINER_IMAGE']
  waitFor: ['container-image-tag', 'container-image-test']
